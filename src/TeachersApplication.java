
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.awt.Image;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Faisal
 */
public class TeachersApplication extends javax.swing.JFrame {

    /**
     * Creates new form TeachersApplication
     */
    String url = "jdbc:mysql://localhost:3306/tution_house";
    String username = "root";
    String pass = "123456";
    public TeachersApplication() {
        initComponents();
        SearchTeachers();
        ScaleImage();
    }
    public void ScaleImage() {
        ImageIcon ic;
        ic = new ImageIcon("E:\\JavaProject\\NoakhaliTuitionHousee\\src\\img\\back1.jpg");
        Image im = ic.getImage();
        Image imScale = im.getScaledInstance(jLabel3.getWidth(), jLabel3.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon scaledicon = new ImageIcon(imScale);
        jLabel3.setIcon(scaledicon);
    }
    class teacher_info {

        public String code,cell,cls,subject,name,category,skill,dept,session,institution,experience,gender,location;

        public teacher_info(String code, String name, String cell, String institution, String dept,
        String session,String experience,String location,String subject,String cls,String category,String gender,String skill) {
            this.code = code;
            this.cell = cell;
            this.cls = cls;
            this.subject= subject;
            this.dept = dept;
            this.category = category;
            this.session = session;
            this.institution = institution;
            this.location = location;
            this.gender= gender;
            this.experience = experience;
            this.skill = skill;
            this.name = name;
        }
    }
    ArrayList<teacher_info> ar = new ArrayList<>();
    public void showTable() {
        DefaultTableModel mod = (DefaultTableModel) (jTable1.getModel());
        Object[] col = new Object[13];
        mod.setRowCount(0);
        for (int i = 0; i < ar.size(); i++) {
            col[0] = ar.get(i).code;
            col[1] = ar.get(i).name;
            col[2] = ar.get(i).cell;
            col[3] = ar.get(i).institution;
            col[4] = ar.get(i).dept;
            col[5] = ar.get(i).session;
            col[6] = ar.get(i).experience;
            col[7] = ar.get(i).location;
            col[8] = ar.get(i).subject;
            col[9] = ar.get(i).cls;
            col[10] = ar.get(i).category;
            col[11] = ar.get(i).gender;
            col[12] = ar.get(i).skill;
            mod.addRow(col);
        }
    }
    public void SearchTeachers() {
        try {
            String query = "SELECT * FROM teachers;";
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = (Connection) DriverManager.getConnection(url, username, pass); //2
            Statement st = (Statement) con.createStatement();
            ResultSet rs = st.executeQuery(query);

            ar.clear();
            while (rs.next()) {
//                System.out.println(rs.getString("name"));
                teacher_info obj = new teacher_info(rs.getString("codded"), rs.getString("name"),
                    rs.getString("mobile"), rs.getString("institution"), rs.getString("department"),rs.getString("session"),
                    rs.getString("experience"),rs.getString("location"),rs.getString("subject"),rs.getString("class"),
                    rs.getString("category"),rs.getString("gender"),rs.getString("special_skill"));
                ar.add(obj);
            }
            showTable();
            st.close();
            con.close();

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(TeachersApplication.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Code", "Name", "Mobile No", "Institution", "Dept", "Session", "Experience", "Location", "Subject", "Class", "Category", "Gender", "Skill"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(25);
        jTable1.setSelectionForeground(new java.awt.Color(204, 255, 255));
        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(true);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(40);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(9).setPreferredWidth(40);
            jTable1.getColumnModel().getColumn(10).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(11).setPreferredWidth(40);
            jTable1.getColumnModel().getColumn(12).setPreferredWidth(80);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1294, -1));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(745, 445, 150, 32));

        jLabel1.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        jLabel1.setText("Code :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 445, 52, 32));

        jLabel2.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N
        jLabel2.setText("Mobile No :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(665, 445, -1, 32));
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 445, 155, 32));

        jButton1.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(479, 495, 137, 34));

        jButton2.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jButton2.setText("BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 547, 124, 34));

        jButton3.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jButton3.setText("DELETE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(676, 495, 140, 34));
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 430, 1290, 180));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String mob = jTextField1.getText();
        String Code = jTextField2.getText();
        String prev = "NO";
        if(mob.length()==0){
            JOptionPane.showMessageDialog(null, "Please enter Teacher's mobile number!!");
        }
        else if(Code.length()==0){
            JOptionPane.showMessageDialog(null, "Please give teachers Code !!");
        }
        else{
            try {
                String query = "SELECT * FROM teachers WHERE mobile = '" + mob + "' AND codded = '" + prev + "';";
                String q = "SELECT * FROM teachers WHERE codded = '" + Code + "';";
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = (Connection) DriverManager.getConnection(url, username, pass);
                Connection con2 = (Connection) DriverManager.getConnection(url, username, pass);//2
                Statement st = (Statement) con.createStatement();
                ResultSet rs = st.executeQuery(query);
                Statement st2 = (Statement) con2.createStatement();
                ResultSet rs2 = st2.executeQuery(q);
                int cnt=0;
                if(rs2.next()){
                    JOptionPane.showMessageDialog(null, "Code is already used!!!\nEnter new one","Alert",0);
                    cnt++;
                }
                if(cnt<1){
                    if (rs.next()) {
                        try{
                          String query1 = "UPDATE teachers SET codded = '" + Code + "' where mobile = '" + mob + "';";
                          Class.forName("com.mysql.jdbc.Driver");
                          Connection con1 = (Connection) DriverManager.getConnection(url, username, pass); //2
                          Statement st1 = (Statement) con1.createStatement();
//                        System.out.println(query);
                          st1.execute(query1);
                          JOptionPane.showMessageDialog(null, "Updated Successfully!");
                          SearchTeachers();
                          jTextField1.setText("");
                          jTextField2.setText("");
                          con1.close();
                          st1.close();
                       }
                       catch (ClassNotFoundException | SQLException ex) {
                         Logger.getLogger(TeachersApplication.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Wrong info Or The teacher were already codded!\nThank you!", "Alert", 0);
                    }
                }

            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(TeachersApplication.class.getName()).log(Level.SEVERE, null, ex);
              }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String mob = jTextField1.getText();
         if(mob.length()==0){
            JOptionPane.showMessageDialog(null, "Please enter Teacher's mobile number!!");
        }
        else{
            try{
               String query = "DELETE from teachers where mobile = '" + mob + "';";
               Class.forName("com.mysql.jdbc.Driver");
               Connection con = (Connection) DriverManager.getConnection(url, username, pass); //2
               Statement st = (Statement) con.createStatement();

               st.execute(query);
               JOptionPane.showMessageDialog(null, "Deleted Successfully!");
               SearchTeachers();
               jTextField1.setText("");
               jTextField2.setText("");
               con.close();
               st.close();
           }
           catch (ClassNotFoundException | SQLException ex) {
               Logger.getLogger(TeachersApplication.class.getName()).log(Level.SEVERE, null, ex);
           }
         }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        AdminPage Ap = new AdminPage();
        Ap.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeachersApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeachersApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeachersApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeachersApplication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeachersApplication().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
